{"version":3,"sources":["suspense/UseStateWithEffect/Counter.js","suspense/UseRef/Tilt.js","suspense/UseReducer/Stopwatch.js","suspense/UseReducer/Stopwatch.withReducer.js","suspense/UseReducer/Stopwatch.withSimpleReducer.js","suspense/UseReducer/Stopwatch.withSharedLogic.js","suspense/Memo/Memo.js","suspense/Lazy/Lazy.js","suspense/Suspense/fetch-pokemon.js","suspense/Suspense/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["Counter","_useState","useState","Number","window","localStorage","getItem","_useState2","Object","slicedToArray","count","setCount","useEffect","setItem","react_default","a","createElement","onClick","Tilt","props","tiltRef","useRef","VanillaTilt","init","current","max","speed","glare","max-glare","vanillaTilt","destroy","ref","className","children","Stopwatch","lapse","setLapse","_useState3","_useState4","running","setRunning","intervalRef","clearInterval","style","textAlign","fontSize","display","startTime","Date","now","setInterval","reducer","state","action","type","objectSpread","_useReducer","useReducer","_useReducer2","_useReducer2$","dispatch","currentState","newState","setState","useStopwatch","params","handleRunClick","handleClearClick","Stopwatches","stopwatchOne","stopwatchTwo","Stopwatch_withSharedLogic_Stopwatch","Upper","React","memo","_ref","console","log","toUpperCase","Memo","first","setFirstName","_useState5","_useState6","last","setLastName","htmlFor","id","onChange","e","target","value","Memo_Upper","lazy","__webpack_require__","then","bind","Lazy","_useToggle","arguments","length","undefined","on","setOn","useToggle","_useToggle2","showTilt","toggleTilt","checked","react","fallback","Lazy_Tilt","fetchPokemon","name","fetch","method","headers","content-type","body","JSON","stringify","query","variables","r","json","response","data","pokemon","cache","createCache","myPokemon","createResource","PokemonInfo","pokemonName","read","buttonStyle","padding","margin","width","App","setPokemonName","onSubmit","preventDefault","elements","UseStateWithEffect_Counter","UseRef_Tilt","UseReducer_Stopwatch","Stopwatch_withReducer","Stopwatch_withSimpleReducer","Stopwatch_withSharedLogic","Memo_Memo","Lazy_Lazy","Pokemon","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0OAYeA,MAVf,WACC,IADkBC,EAEQC,mBADL,kBAAMC,OAAOC,OAAOC,aAAaC,QAAQ,UAAY,KADxDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAEXS,EAFWH,EAAA,GAEJI,EAFIJ,EAAA,GAOlB,OAHAK,oBAAU,WACTR,OAAOC,aAAaQ,QAAQ,QAASH,IACnC,CAACA,IACGI,EAAAC,EAAAC,cAAA,UAAQC,QAJG,kBAAMN,EAASD,EAAQ,KAILA,0BCoBtBQ,MAxBf,SAAcC,GACb,IAAMC,EAAUC,mBAYhB,OAVAT,oBAAU,WAOT,OANAU,IAAYC,KAAKH,EAAQI,QAAS,CACjCC,IAAK,GACLC,MAAO,IACPC,OAAO,EACPC,YAAa,KAEP,kBAAMR,EAAQI,QAAQK,YAAYC,YACvC,IAGFhB,EAAAC,EAAAC,cAAA,OAAKe,IAAKX,EAASY,UAAU,aAC5BlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cAAcb,EAAMc,iBCgCvBC,MAjDf,WAAqB,IAAAjC,EACOC,mBAAS,GADhBK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACZkC,EADY5B,EAAA,GACL6B,EADK7B,EAAA,GAAA8B,EAEWnC,oBAAS,GAFpBoC,EAAA9B,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GAEZE,EAFYD,EAAA,GAEHE,EAFGF,EAAA,GAGbG,EAAcpB,iBAAO,MAwB3B,OAtBAT,oBAAU,WACR,OAAO,kBAAM8B,cAAcD,EAAYjB,WACtC,IAqBDV,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAACC,UAAW,WACtB9B,EAAAC,EAAAC,cAAA,SACE2B,MAAO,CACLE,SAAU,MACVC,QAAS,UAGVX,EANH,MASArB,EAAAC,EAAAC,cAAA,UAAQC,QA7BZ,WACE,GAAIsB,EACFG,cAAcD,EAAYjB,aACrB,CACL,IAAMuB,EAAYC,KAAKC,MAAQd,EAC/BM,EAAYjB,QAAU0B,YAAY,WAChCd,EAASY,KAAKC,MAAQF,IACrB,GAELP,GAAYD,KAqBPA,EAAU,OAAS,SAEtBzB,EAAAC,EAAAC,cAAA,UAAQC,QApBZ,WACEyB,cAAcD,EAAYjB,SAC1BY,EAAS,GACTI,GAAW,KAiBT,kBCzCN,SAASW,EAAQC,EAAOC,GACvB,OAAQA,EAAOC,MACd,IAAK,QACJ,OAAO9C,OAAA+C,EAAA,EAAA/C,CAAA,GACH4C,EADJ,CAECjB,MAAOkB,EAAOJ,IAAMI,EAAON,YAG7B,IAAK,iBACJ,OAAOvC,OAAA+C,EAAA,EAAA/C,CAAA,GACH4C,EADJ,CAECb,SAAUa,EAAMb,UAGlB,IAAK,QACJ,OAAO/B,OAAA+C,EAAA,EAAA/C,CAAA,GACH4C,EADJ,CAECb,SAAS,EACTJ,MAAO,IAGT,QACC,OAAOiB,GAsDKlB,MAlDf,WAAqB,IAAAsB,EACqBC,qBAAWN,EAAS,CAC5DZ,SAAS,EACTJ,MAAO,IAHYuB,EAAAlD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GAAAG,EAAAD,EAAA,GACVnB,EADUoB,EACVpB,QAASJ,EADCwB,EACDxB,MAASyB,EADRF,EAAA,GAMdjB,EAAcpB,iBAAO,MA2B3B,OAzBAT,oBAAU,WACT,OAAO,kBAAM8B,cAAcD,EAAYjB,WACrC,IAwBFV,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAEC,UAAW,WACxB9B,EAAAC,EAAAC,cAAA,SACC2B,MAAO,CACNE,SAAU,MACVC,QAAS,UAGTX,EANF,MASArB,EAAAC,EAAAC,cAAA,UAAQC,QAhCV,WACC,GAAIsB,EACHG,cAAcD,EAAYjB,aACpB,CACN,IAAMuB,EAAYC,KAAKC,MAAQd,EAC/BM,EAAYjB,QAAU0B,YAAY,WACjCU,EAAS,CACHN,KAAM,QACNL,IAAKD,KAAKC,MACVF,eAEJ,GAEJa,EAAS,CAAEN,KAAM,qBAmBkBf,EAAU,OAAS,SACrDzB,EAAAC,EAAAC,cAAA,UAAQC,QAjBV,WACCyB,cAAcD,EAAYjB,SAC1BoC,EAAS,CAAEN,KAAM,YAehB,WCvEH,SAASH,EAAQU,EAAcC,GAC9B,OAAOtD,OAAA+C,EAAA,EAAA/C,CAAA,GAAKqD,EAAiBC,GAmDf5B,MAhDf,WAAqB,IAAAsB,EACqBC,qBAAWN,EAAS,CAC5DZ,SAAS,EACTJ,MAAO,IAHYuB,EAAAlD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GAAAG,EAAAD,EAAA,GACVnB,EADUoB,EACVpB,QAASJ,EADCwB,EACDxB,MAAS4B,EADRL,EAAA,GAMdjB,EAAcpB,iBAAO,MAyB3B,OAvBAT,oBAAU,WACT,OAAO,kBAAM8B,cAAcD,EAAYjB,WACrC,IAsBFV,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAEC,UAAW,WACxB9B,EAAAC,EAAAC,cAAA,SACC2B,MAAO,CACNE,SAAU,MACVC,QAAS,UAGTX,EANF,MASArB,EAAAC,EAAAC,cAAA,UAAQC,QA9BV,WACC,GAAIsB,EACHG,cAAcD,EAAYjB,aACpB,CACN,IAAMuB,EAAYC,KAAKC,MAAQd,EAC/BM,EAAYjB,QAAU0B,YAAY,WACjCa,EAAS,CACR5B,MAAOa,KAAKC,MAAQF,KAEnB,GAEJgB,EAAS,CAAExB,SAAUA,MAmBcA,EAAU,OAAS,SACrDzB,EAAAC,EAAAC,cAAA,UAAQC,QAjBV,WACCyB,cAAcD,EAAYjB,SAC1BuC,EAAS,CAAExB,SAAS,EAAOJ,MAAO,MAejC,WC/CH,SAAS6B,EAAaC,GAAQ,IAAAT,EAKYC,qBAJzC,SAAiBI,EAAcC,GAC9B,OAAOtD,OAAA+C,EAAA,EAAA/C,CAAA,GAAKqD,EAAiBC,IAG+B,CAC5DvB,SAAS,EACTJ,MAAO,IAPqBuB,EAAAlD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GAAAG,EAAAD,EAAA,GAKnBnB,EALmBoB,EAKnBpB,QAASJ,EALUwB,EAKVxB,MAAS4B,EALCL,EAAA,GAUvBjB,EAAcpB,iBAAO,MAyB3B,OAvBAT,oBAAU,WACT,OAAO,kBAAM8B,cAAcD,EAAYjB,WACrC,IAqBI,CAAEW,QAAOI,UAAS2B,eAnBzB,WACC,GAAI3B,EACHG,cAAcD,EAAYjB,aACpB,CACN,IAAMuB,EAAYC,KAAKC,MAAQd,EAC/BM,EAAYjB,QAAU0B,YAAY,WACjCa,EAAS,CACR5B,MAAOa,KAAKC,MAAQF,KAEnB,GAEJgB,EAAS,CAAExB,SAAUA,KAQmB4B,iBALzC,WACCzB,cAAcD,EAAYjB,SAC1BuC,EAAS,CAAExB,SAAS,EAAOJ,MAAO,MAMpC,SAASD,EAAUf,GAClB,OAAOL,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,SACC2B,MAAO,CACNE,SAAU,MACVC,QAAS,UAGT3B,EAAMgB,MANR,MASArB,EAAAC,EAAAC,cAAA,UAAQC,QAASE,EAAM+C,gBACrB/C,EAAMoB,QAAU,OAAS,SAE3BzB,EAAAC,EAAAC,cAAA,UAAQC,QAASE,EAAMgD,kBAAvB,UAoBaC,MAhBf,WACC,IAAMC,EAAeL,IACfM,EAAeN,IAErB,OACClD,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAEC,UAAW,WACxB9B,EAAAC,EAAAC,cAACuD,EAAcF,GACfvD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,YAAOqD,EAAalC,MAAQmC,EAAanC,MAAzC,MACArB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuD,EAAcD,KCnEZE,EAAQC,IAAMC,KAAK,SAAAC,GAA2B,IAAX1C,EAAW0C,EAAX1C,SAAWhC,EACxBC,mBAAS,GADeK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAC3CS,EAD2CH,EAAA,GACpCI,EADoCJ,EAAA,GAGlD,OADAqE,QAAQC,IAAI,kBAAmB5C,GAE7BnB,EAAAC,EAAAC,cAAA,iCACsBiB,EAAS6C,cAAe,IAC5ChE,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMN,EAASD,EAAQ,KAAKA,MAwBpCqE,MAnBf,WAAgB,IAAA1C,EACgBnC,mBAAS,IADzBoC,EAAA9B,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GACP2C,EADO1C,EAAA,GACA2C,EADA3C,EAAA,GAAA4C,EAEchF,mBAAS,IAFvBiF,EAAA3E,OAAAC,EAAA,EAAAD,CAAA0E,EAAA,GAEPE,EAFOD,EAAA,GAEDE,EAFCF,EAAA,GAGd,OACErE,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAEC,UAAW,WACvB9B,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,oBAAf,gBACAxE,EAAAC,EAAAC,cAAA,SACEuE,GAAG,mBACHC,SAAU,SAAAC,GAAC,OAAIR,EAAaQ,EAAEC,OAAOC,UAEvC7E,EAAAC,EAAAC,cAAC4E,EAAD,KAAQZ,GACRlE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,mBAAf,eACAxE,EAAAC,EAAAC,cAAA,SAAOuE,GAAG,kBAAkBC,SAAU,SAAAC,GAAC,OAAIJ,EAAYI,EAAEC,OAAOC,UAChE7E,EAAAC,EAAAC,cAAC4E,EAAD,KAAQR,KC1BRlE,EAAOuD,IAAMoB,KAAK,kBAAMC,EAAAL,EAAA,GAAAM,KAAAD,EAAAE,KAAA,YA8BfC,MAtBf,WAAgB,IAAAC,EANhB,WAAiC,IAAd3E,EAAc4E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAAlG,EACXC,mBAASqB,GADEhB,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACxBqG,EADwB/F,EAAA,GACpBgG,EADoBhG,EAAA,GAG/B,MAAO,CAAC+F,EADO,kBAAMC,GAAOD,KAKGE,GADjBC,EAAAjG,OAAAC,EAAA,EAAAD,CAAA0F,EAAA,GACPQ,EADOD,EAAA,GACGE,EADHF,EAAA,GAEd,OACE3F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBAEEF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,WAAWsD,QAASF,EAAUlB,SAAUmB,KAGtD7F,EAAAC,EAAAC,cAAA,WACG0F,EACC5F,EAAAC,EAAAC,cAAC6F,EAAA,SAAD,CAAUC,SAAUhG,EAAAC,EAAAC,cAAA,0BAClBF,EAAAC,EAAAC,cAAC+F,EAAD,KACEjG,EAAAC,EAAAC,cAAA,wBAGF,eCOKgG,MAjCjB,SAAsBC,GAiBlB,OAAO7G,OACJ8G,MAAM,iCAAkC,CAEvCC,OAAQ,OACRC,QAAS,CACPC,eAAgB,kCAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAxBY,gTAyBZC,UAAW,CAACT,YAGflB,KAAK,SAAA4B,GAAC,OAAIA,EAAEC,SACZ7B,KAAK,SAAA8B,GAAQ,OAAIA,EAASC,KAAKC,WC1BhCC,EAAQC,wBACRC,EAAYC,yBAAenB,GAEjC,SAASoB,EAATzD,GAAoC,IAAd0D,EAAc1D,EAAd0D,YACdN,EAAUG,EAAUI,KAAKN,EAAOK,GACtC,OAAOvH,EAAAC,EAAAC,cAAA,WAAMuG,KAAKC,UAAUO,GAAW,UAAW,KAAM,IA4B1D,IAAMQ,EAAc,CACnBC,QAAS,QACNC,OAAQ,EACR5F,SAAU,MACV6F,MAAO,QAGIC,EAhCf,WAAe,IAAA1I,EACyBC,mBAAS,MADlCK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACNoI,EADM9H,EAAA,GACOqI,EADPrI,EAAA,GAMb,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAM6H,SANV,SAAsBpD,GACpBA,EAAEqD,iBACFF,EAAenD,EAAEC,OAAOqD,SAASV,YAAY1C,SAKzC7E,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,qBAAf,6BACAxE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOuE,GAAG,oBAAoB0B,KAAK,gBACnCnG,EAAAC,EAAAC,cAAA,UAAQ2B,MAAO4F,EAAajF,KAAK,UAAjC,WAEFxC,EAAAC,EAAAC,cAAA,WACGqH,EACCvH,EAAAC,EAAAC,cAAC6F,EAAA,SAAD,CAAUC,SAAUhG,EAAAC,EAAAC,cAAA,0BAClBF,EAAAC,EAAAC,cAACoH,EAAD,CAAaC,YAAaA,KAE1B,QCiBGM,mLAnCb,OACC7H,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAACgI,EAAD,MACAlI,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACiI,EAAD,MACAnI,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAACkI,EAAD,MAEApI,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACmI,EAAD,MAEArI,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAACoI,EAAD,MAEAtI,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAACqI,EAAD,MAEIvI,EAAAC,EAAAC,cAAA,2BACJF,EAAAC,EAAAC,cAACsI,EAAD,MAEIxI,EAAAC,EAAAC,cAAA,2BACJF,EAAAC,EAAAC,cAACuI,EAAD,MAEIzI,EAAAC,EAAAC,cAAA,mCACJF,EAAAC,EAAAC,cAACwI,EAAD,cA/BcC,aCCEC,QACW,cAA7BtJ,OAAOuJ,SAASC,UAEe,UAA7BxJ,OAAOuJ,SAASC,UAEhBxJ,OAAOuJ,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOjJ,EAAAC,EAAAC,cAACgJ,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtE,KAAK,SAAAuE,GACjCA,EAAaC","file":"static/js/main.86f62ad6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Counter() {\n\tconst initialCount = () => Number(window.localStorage.getItem('count') || 0)\n\tconst [count, setCount] = useState(initialCount);\n\tconst increment = () => setCount(count + 1);\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem('count', count);\n\t}, [count]);\n\treturn <button onClick={increment}>{count}</button>;\n}\n\nexport default Counter;\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport VanillaTilt from 'vanilla-tilt';\nimport './Tilt.css';\n\nfunction Tilt(props) {\n\tconst tiltRef = useRef();\n\n\tuseEffect(() => {\n\t\tVanillaTilt.init(tiltRef.current, {\n\t\t\tmax: 25,\n\t\t\tspeed: 400,\n\t\t\tglare: true,\n\t\t\t'max-glare': 0.5\n\t\t});\n\t\treturn () => tiltRef.current.vanillaTilt.destroy();\n\t}, []);\n\n\treturn (\n\t\t<div ref={tiltRef} className=\"tilt-root\">\n\t\t\t<div className=\"tilt-child\">{props.children}</div>\n\t\t</div>\n\t);\n}\n\nTilt.propTypes = {\n\tchildren: PropTypes.any\n};\n\nexport default Tilt;\n","import React, {useState, useRef, useEffect} from 'react'\nimport './Stopwatch.css';\n\nfunction Stopwatch() {\n  const [lapse, setLapse] = useState(0)\n  const [running, setRunning] = useState(false)\n  const intervalRef = useRef(null)\n\n  useEffect(() => {\n    return () => clearInterval(intervalRef.current)\n  }, [])\n\n  function handleRunClick() {\n    if (running) {\n      clearInterval(intervalRef.current)\n    } else {\n      const startTime = Date.now() - lapse\n      intervalRef.current = setInterval(() => {\n        setLapse(Date.now() - startTime)\n      }, 1)\n    }\n    setRunning(!running)\n  }\n\n  function handleClearClick() {\n    clearInterval(intervalRef.current)\n    setLapse(0)\n    setRunning(false)\n  }\n\n  return (\n    <div style={{textAlign: 'center'}}>\n      <label\n        style={{\n          fontSize: '5em',\n          display: 'block',\n        }}\n      >\n        {lapse}\n        ms\n      </label>\n      <button onClick={handleRunClick}>\n        {running ? 'Stop' : 'Start'}\n      </button>\n      <button onClick={handleClearClick}>\n        Clear\n      </button>\n    </div>\n  )\n}\n\n\nexport default Stopwatch","import React, { useRef, useEffect, useReducer } from 'react';\nimport './Stopwatch.css';\n\nfunction reducer(state, action) {\n\tswitch (action.type) {\n\t\tcase 'LAPSE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlapse: action.now - action.startTime\n\t\t\t};\n\n\t\tcase 'TOGGLE_RUNNING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trunning: !state.running\n\t\t\t};\n\n\t\tcase 'CLEAR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trunning: false,\n\t\t\t\tlapse: 0\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction Stopwatch() {\n\tconst [ { running, lapse }, dispatch ] = useReducer(reducer, {\n\t\trunning: false,\n\t\tlapse: 0\n\t});\n\n\tconst intervalRef = useRef(null);\n\n\tuseEffect(() => {\n\t\treturn () => clearInterval(intervalRef.current);\n\t}, []);\n\n\tfunction handleRunClick() {\n\t\tif (running) {\n\t\t\tclearInterval(intervalRef.current);\n\t\t} else {\n\t\t\tconst startTime = Date.now() - lapse;\n\t\t\tintervalRef.current = setInterval(() => {\n\t\t\t\tdispatch({ \n          type: 'LAPSE', \n          now: Date.now(),\n          startTime\n        });\n\t\t\t}, 1);\n\t\t}\n\t\tdispatch({ type: 'TOGGLE_RUNNING' });\n\t}\n\n\tfunction handleClearClick() {\n\t\tclearInterval(intervalRef.current);\n\t\tdispatch({ type: 'CLEAR' });\n\t}\n\n\treturn (\n\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t<label\n\t\t\t\tstyle={{\n\t\t\t\t\tfontSize: '5em',\n\t\t\t\t\tdisplay: 'block'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{lapse}\n\t\t\t\tms\n\t\t\t</label>\n\t\t\t<button onClick={handleRunClick}>{running ? 'Stop' : 'Start'}</button>\n\t\t\t<button onClick={handleClearClick}>Clear</button>\n\t\t</div>\n\t);\n}\n\nexport default Stopwatch;\n","import React, { useRef, useEffect, useReducer } from 'react';\nimport './Stopwatch.css';\n\nfunction reducer(currentState, newState) {\n\treturn { ...currentState, ...newState };\n}\n\nfunction Stopwatch() {\n\tconst [ { running, lapse }, setState ] = useReducer(reducer, {\n\t\trunning: false,\n\t\tlapse: 0\n\t});\n\n\tconst intervalRef = useRef(null);\n\n\tuseEffect(() => {\n\t\treturn () => clearInterval(intervalRef.current);\n\t}, []);\n\n\tfunction handleRunClick() {\n\t\tif (running) {\n\t\t\tclearInterval(intervalRef.current);\n\t\t} else {\n\t\t\tconst startTime = Date.now() - lapse;\n\t\t\tintervalRef.current = setInterval(() => {\n\t\t\t\tsetState({\n\t\t\t\t\tlapse: Date.now() - startTime\n\t\t\t\t});\n\t\t\t}, 1);\n\t\t}\n\t\tsetState({ running: !running });\n\t}\n\n\tfunction handleClearClick() {\n\t\tclearInterval(intervalRef.current);\n\t\tsetState({ running: false, lapse: 0 });\n\t}\n\n\treturn (\n\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t<label\n\t\t\t\tstyle={{\n\t\t\t\t\tfontSize: '5em',\n\t\t\t\t\tdisplay: 'block'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{lapse}\n\t\t\t\tms\n\t\t\t</label>\n\t\t\t<button onClick={handleRunClick}>{running ? 'Stop' : 'Start'}</button>\n\t\t\t<button onClick={handleClearClick}>Clear</button>\n\t\t</div>\n\t);\n}\n\nexport default Stopwatch;\n","import React, { useRef, useEffect, useReducer } from 'react';\nimport './Stopwatch.css';\n\nfunction useStopwatch(params) {\n\tfunction reducer(currentState, newState) {\n\t\treturn { ...currentState, ...newState };\n\t}\n\n\tconst [ { running, lapse }, setState ] = useReducer(reducer, {\n\t\trunning: false,\n\t\tlapse: 0\n\t});\n\n\tconst intervalRef = useRef(null);\n\n\tuseEffect(() => {\n\t\treturn () => clearInterval(intervalRef.current);\n\t}, []);\n\n\tfunction handleRunClick() {\n\t\tif (running) {\n\t\t\tclearInterval(intervalRef.current);\n\t\t} else {\n\t\t\tconst startTime = Date.now() - lapse;\n\t\t\tintervalRef.current = setInterval(() => {\n\t\t\t\tsetState({\n\t\t\t\t\tlapse: Date.now() - startTime\n\t\t\t\t});\n\t\t\t}, 1);\n\t\t}\n\t\tsetState({ running: !running });\n\t}\n\n\tfunction handleClearClick() {\n\t\tclearInterval(intervalRef.current);\n\t\tsetState({ running: false, lapse: 0 });\n\t}\n\n\treturn { lapse, running, handleRunClick, handleClearClick };\n}\n\nfunction Stopwatch(props) {\n\treturn <div>\n\t\t<label\n\t\t\tstyle={{\n\t\t\t\tfontSize: '5em',\n\t\t\t\tdisplay: 'block'\n\t\t\t}}\n\t\t>\n\t\t\t{props.lapse}\n\t\t\tms\n\t\t</label>\n\t\t<button onClick={props.handleRunClick}>\n\t\t\t{props.running ? 'Stop' : 'Start'}\n\t\t</button>\n\t\t<button onClick={props.handleClearClick}>Clear</button>\n\t</div>;\n}\n\nfunction Stopwatches() {\n\tconst stopwatchOne = useStopwatch();\n\tconst stopwatchTwo = useStopwatch();\n\n\treturn (\n\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t<Stopwatch {...stopwatchOne}/>\n\t\t\t<hr />\n\t\t\t<strong>Lapse Difference: </strong>\n\t\t\t<span>{stopwatchOne.lapse - stopwatchTwo.lapse}ms</span>\n\t\t\t<hr />\n\t\t\t<Stopwatch {...stopwatchTwo}/>\n\t\t</div>\n\t);\n}\n\nexport default Stopwatches;\n","\nimport React, {useState} from 'react'\n\nconst Upper = React.memo(function Upper({children}) {\n  const [count, setCount] = useState(0);\n  console.log('Rendering memo:', children);\n  return (\n    <div>\n      Uppercase version: {children.toUpperCase()}{' '}\n      <button onClick={() => setCount(count + 1)}>{count}</button>\n    </div>\n  )\n});\n\nfunction Memo() {\n  const [first, setFirstName] = useState('')\n  const [last, setLastName] = useState('')\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <label htmlFor=\"first-name-input\">First Name: </label>\n      <input\n        id=\"first-name-input\"\n        onChange={e => setFirstName(e.target.value)}\n      />\n      <Upper>{first}</Upper>\n      <hr />\n      <label htmlFor=\"last-name-input\">Last Name: </label>\n      <input id=\"last-name-input\" onChange={e => setLastName(e.target.value)} />\n      <Upper>{last}</Upper>\n    </div>\n  )\n}\n\nexport default Memo;","import React, {useState, Suspense} from 'react'\n\nconst Tilt = React.lazy(() => import('./Tilt.lazy'))\n\nfunction useToggle(init = false) {\n  const [on, setOn] = useState(init)\n  const toggle = () => setOn(!on)\n  return [on, toggle]\n}\n\nfunction Lazy() {\n  const [showTilt, toggleTilt] = useToggle()\n  return (\n    <div>\n      <label>\n        show tilt\n        <input type=\"checkbox\" checked={showTilt} onChange={toggleTilt} />\n      </label>\n\n      <div>\n        {showTilt ? (\n          <Suspense fallback={<div>loading...</div>}>\n            <Tilt>\n              <div>Tilt Me</div>\n            </Tilt>\n          </Suspense>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default Lazy","function fetchPokemon(name) {\n    const pokemonQuery = `\n        query ($name: String) {\n          pokemon(name: $name) {\n            id\n            number\n            name\n            attacks {\n              special {\n                name\n                type\n                damage\n              }\n            }\n          }\n        }\n      `\n    return window\n      .fetch('https://graphql-pokemon.now.sh', {\n        // learn more about this API here: https://graphql-pokemon.now.sh/\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json;charset=UTF-8',\n        },\n        body: JSON.stringify({\n          query: pokemonQuery,\n          variables: {name},\n        }),\n      })\n      .then(r => r.json())\n      .then(response => response.data.pokemon)\n  }\n  \n  export default fetchPokemon","import React, {useState, Suspense} from 'react'\nimport {createCache, createResource} from 'react-cache'\nimport fetchPokemon from './fetch-pokemon'\n\nconst cache = createCache()\nconst myPokemon = createResource(fetchPokemon)\n\nfunction PokemonInfo({pokemonName}) {\n  const pokemon = myPokemon.read(cache, pokemonName)\n  return <pre>{JSON.stringify(pokemon || 'Unknown', null, 2)}</pre>\n}\n\nfunction App() {\n  const [pokemonName, setPokemonName] = useState(null)\n  function handleSubmit(e) {\n    e.preventDefault()\n    setPokemonName(e.target.elements.pokemonName.value)\n  }\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"pokemonName-input\">Pokemon Name (ie Pikachu)</label>\n        <br />\n        <input id=\"pokemonName-input\" name=\"pokemonName\" />\n        <button style={buttonStyle} type=\"submit\">Submit</button>\n      </form>\n      <div>\n        {pokemonName ? (\n          <Suspense fallback={<div>loading...</div>}>\n            <PokemonInfo pokemonName={pokemonName} />\n          </Suspense>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nconst buttonStyle = {\n\tpadding: '0 5px',\n    margin: 0,\n    fontSize: '1em',\n    width: 'auto'\n}\n\nexport default App","import React, { Component } from 'react';\nimport Counter from './suspense/UseStateWithEffect/Counter';\nimport Tilt from './suspense/UseRef/Tilt';\nimport Stopwatch from './suspense/UseReducer/Stopwatch';\nimport StopwatchWithReducer from './suspense/UseReducer/Stopwatch.withReducer';\nimport StopwatchWithSimpleReducer from './suspense/UseReducer/Stopwatch.withSimpleReducer';\nimport StopwatchWithSharedLogic from './suspense/UseReducer/Stopwatch.withSharedLogic';\nimport Memo from './suspense/Memo/Memo';\nimport Lazy from './suspense/Lazy/Lazy';\nimport Pokemon from './suspense/Suspense/Pokemon';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4>1. useState + useEffects (localStorage)</h4>\n\t\t\t\t<Counter />\n\t\t\t\t<hr />\n\n\t\t\t\t<h4>2. useRef + cleanup</h4>\n\t\t\t\t<Tilt />\n\t\t\t\t<hr />\n\n\t\t\t\t<h4>3. useState + useEffects (localStorage)</h4>\n\t\t\t\t<Stopwatch />\n\n\t\t\t\t<h4>4. useReducer</h4>\n\t\t\t\t<StopwatchWithReducer />\n\n\t\t\t\t<h4>5. useReducer (simplified)</h4>\n\t\t\t\t<StopwatchWithSimpleReducer />\n\n\t\t\t\t<h4>6. Shared complex logic</h4>\n\t\t\t\t<StopwatchWithSharedLogic />\n\n        <h4>7. React.memo</h4>\n\t\t\t\t<Memo />\n\n        <h4>8. React.lazy</h4>\n\t\t\t\t<Lazy />\n\n        <h4>9. Suspense + caching</h4>\n\t\t\t\t<Pokemon />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}